stages:
  - build
  - test
  - pages
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cargo/
  policy: pull-push

variables:
  CARGO_INCREMENTAL: 0
  CARGO_HOME: ${CI_PROJECT_DIR}/.cargo
  CLIPPY_OPTS: -W clippy::pedantic -A clippy::must_use_candidate -A clippy::doc_markdown -A clippy::empty_enum -A clippy::module_name_repetitions -A clippy::missing_errors_doc -A clippy::cast_possible_wrap

default:
  image: rust:buster

build:stable:
  stage: build
  before_script:
    - apt-get update -qy
    - apt-get -qy install libpam0g-dev llvm clang libclang-dev
  script:
    - cargo build --workspace --all-features --color=always
  artifacts:
    public: false
    paths:
      - target/debug/
    expire_in: 1 day

test:stable:
  stage: test
  needs:
    - build:stable
  dependencies:
    - build:stable
  before_script:
    - apt-get update -qy
    - apt-get -qy install libpam0g-dev llvm clang libclang-dev
    - 'echo "deb http://deb.debian.org/debian/ buster main contrib" >> /etc/apt/sources.list'
    - apt-get update -qy
    - apt-get -qy install kcov
    - cargo install cargo-hack
    - wget https://grenz-bonn.de/rust2junit.py
    - chmod +x rust2junit.py
  script:
    - export RUSTFLAGS="-C link-dead-code -C inline-threshold=0"
    - cargo hack check --workspace --feature-powerset --no-dev-deps --color=always
    - cargo test --workspace --all-features --verbose | ./rust2junit.py
    - kcov --verify
        --include-pattern=/rust-pam-client/src/
        --exclude-line='#[derive,pub struct'
        --exclude-region='#[cfg(test)]:#[cfg(testkcovstopmarker)]'
        target/cov
        target/debug/deps/pam_client-???????????????? --test-threads 1
    - COVERAGE=$(grep -Po 'covered":.*?[^\\]"' target/cov/index.js | grep "[0-9]*\.[0-9]" -o)
    - echo "Coverage:" $COVERAGE
  artifacts:
    public: false
    paths:
      - target/cov/
    expire_in: 1 week
    reports:
      junit: junit.xml

clippy:
  stage: test
  before_script:
    - apt-get update -qy
    - apt-get -qy install libpam0g-dev llvm clang libclang-dev
    - rustup component add clippy
    - cargo install gitlab_clippy
  script:
    - cargo clippy -- ${CLIPPY_OPTS}
  after_script:
    - 'cargo clippy --message-format=json -- ${CLIPPY_OPTS} | ${CARGO_HOME}/bin/gitlab-clippy > gl-code-quality-report.json'
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    expire_in: 1 week
  only:
    - master
  needs: []

pages:
  stage: pages
  only:
    - master
  needs:
    - test:stable
  dependencies:
    - test:stable
  before_script:
    - apt-get update -qy
    - apt-get -qy install libpam0g-dev llvm clang libclang-dev
  script:
    - cargo doc --workspace --all-features --color=always
    - rm -rf public || true
    - mkdir public
    - cp -R target/doc/* public
    - cp -R target/cov public/
    - find -L public/cov/ -type l -delete
  artifacts:
    paths:
      - public

publish:
  stage: deploy
  dependencies: []
  when: manual
  needs:
    - "test:stable"
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]/
  script:
    - cargo publish --no-verify
